{
  "attribute [Authorize] Directive": {
    "body": "@attribute [Authorize]",
    "description": "@attribute [Authorize]",
    "prefix": "yAuthorizeAttribute"
  },
  "bindAttribute": {
    "body": "@bind=\"${1:Property}\"",
    "description": "Bind attribute",
    "prefix": "yBind"
  },
  "bindFormatAttribute": {
    "body": "@bind:format=\"${1:yyyy-MM-dd}\"",
    "description": "@bind:format=\"MyFormat\"",
    "prefix": "yBindFormat"
  },
  "bindOnInputEvent": {
    "body": "@bind:event=\"oninput\"$0",
    "description": " @bind:event=\"oninput\"",
    "prefix": "yBindOnInputEvent"
  },
  "bindOnProperty": {
    "body": "@bind=\"${1:Property}\"$0",
    "description": "@bind=\"MyProperty\"",
    "prefix": "yBindOnProperty"
  },
  "bindValueAttribute": {
    "body": "@bind-Value=\"${1:Property}\"$0",
    "description": "@bind-Value=\"MyProperty\" ",
    "prefix": "yBindValue"
  },
  "cascadingAuthenticationState": {
    "body": [
      "<CascadingAuthenticationState>",
      "\t$0",
      "</CascadingAuthenticationState>"
    ],
    "description": "CascadingAuthenticationState stub",
    "prefix": "yCascadingAuthenticationState"
  },
  "codeBlock": {
    "body": [
      "@code {",
      "\t$0",
      "}"
    ],
    "description": "@code block",
    "prefix": "yCode"
  },
  "component": {
    "body": [
      "@page \"/${1:${TM_FILENAME_BASE}}\"",
      "",
      "$0",
      "",
      "@code {",
      "",
      "}"
    ],
    "description": "Complete component",
    "prefix": "yComponent"
  },
  "componentChildContent": {
    "body": [
      "@ChildContent",
      "",
      "@code {",
      "\t[Parameter] public RenderFragment ChildContent { get; set; }",
      "}"
    ],
    "description": "Complete component with ChildContent RenderFragment",
    "prefix": "yComponentChildContent"
  },
  "dataAnnotationsValidator": {
    "body": "<DataAnnotationsValidator />",
    "description": "DataAnnotationsValidator",
    "prefix": "yDataAnnotationsValidator"
  },
  "disposableComponent": {
    "body": [
      "@implements IDisposable",
      "",
      "@code {",
      "\tpublic void Dispose()",
      "\t{",
      "\t\t$0",
      "\t}",
      "}"
    ],
    "description": "Complete component inherits IDisposable",
    "prefix": "yComponentDisposable"
  },
  "editForm": {
    "body": [
      "<EditForm Model=\"@${1:Model}\" OnValidSubmit=\"${2|HandleValidSubmitAsync,OnValidSubmit|}\">",
      "\t<DataAnnotationsValidator />",
      "\t<ValidationSummary />",
      "\t<div class=\"mb-3\">",
      "\t\t<label for=\"id$3\" class=\"form-label\" >${5:$3}</label>",
      "\t\t<div>",
      "\t\t\t<InputText id=\"id$3\" class=\"form-control\" @bind-Value=\"@$1.${3:PropertyName}\" placeholder=\"${4:$3}...\" />",
      "\t\t\t<ValidationMessage For=\"@(() => $1.$3)\" />",
      "\t\t</div>",
      "\t</div>",
      "\t<button class=\"btn btn-success\" type=\"submit\">${6|Add,Edit,Submit,Sign In,Logout|} ${7:$1}</button>",
      "</EditForm>",
      "$0"
    ],
    "description": "Inserts EditForm component",
    "prefix": "yEditForm"
  },
  "event:preventDefaultAttribute": {
    "body": "@${1:onkeypress}:preventDefault",
    "description": "PreventDefault attribute",
    "prefix": "yPreventDefault"
  },
  "formControlClass": {
    "body": "class=\"form-control\"",
    "description": "Inserts a form-control class attribute",
    "prefix": "yFormControlClass"
  },
  "implementsIDisposable": {
    "body": "@implements ${1:IDisposable}",
    "description": "@implements IDisposable",
    "prefix": "yImplementsIDisposable"
  },
  "inheritsBaseComponent": {
    "body": "@inherits ${1:${TM_FILENAME_BASE}}Base$0",
    "description": "@inherits C# code-behind base class",
    "prefix": "yInheritsBaseComponent"
  },
  "inheritsOwningComponentBase": {
    "body": "@inherits OwningComponentBase<${1:ApplicationDbContext}>$0",
    "description": "@inherits OwningComponentBase<ApplicationDbContext>",
    "prefix": "yInheritsOwningComponentBase"
  },
  "quickGrid": {
    "body": [
      "<QuickGrid Items=\"@${1:items}\" Pagination=\"@pagination\" />",
      "\t$0",
      "</QuickGrid>"
    ],
    "description": "Inserts a QuickGrid",
    "prefix": "yQuickGrid"
  },
  "propertyColumn": {
    "body": [
      "<PropertyColumn Property=\"@(p=> p.${1:PropertyName})\" Align=\"@Align.${2|Left,Center,Right|}\" Format=\"N0\" Sortable=\"true\" />$0"
    ],
    "description": "PropertyColumn",
    "prefix": "yPropertyColumn"
  },
  "templateColumn": {
    "body": [
      "<TemplateColumn Title=\"${1:Title}\" Align=\"@Align.${2|Left,Center,Right|}\" />$0"
    ],
    "description": "TemplateColumn",
    "prefix": "yTemplateColumn"
  },
  "columnOptions": {
    "body": [
      "<ColumnOptions>",
      "\t",
      "<ColumnOptions/>"
    ],
    "description": "ColumnOptions",
    "prefix": "yColumnOptions"
  },
  "paginator": {
    "body": [
      "<Paginator Value=\"@pagination\" />$0"
    ],
    "description": "PropertyColumn",
    "prefix": "yPaginator"
  },

  "inheritsLayoutComponentBase": {
    "body": [
      "@inherits LayoutComponentBase",
      "$0",
      "@Body",
      "",
      "@code {",
      "",
      "}"
    ],
    "description": "Complete Layout component inherits LayoutComponentBase",
    "prefix": "yInheritsLayoutComponentBase"
  },
  "injectHttpClient": {
    "body": "@inject HttpClient$1 ${2|HttpClient,Http|$0",
    "description": "@inject HttpClient directive",
    "prefix": "yInjectHttpClient"
  },
  "injectIAccessTokenProvider": {
    "body": "@inject Microsoft.AspNetCore.Components.WebAssembly.Authentication.IAccessTokenProvider$1 ${2|AccessTokenProvider,TokenProvider|}$0",
    "description": "@inject IAccessTokenProvider directive in Blazor Server app",
    "prefix": "yInjectIAccessTokenProvider"
  },
  "injectIConfiguration": {
    "body": "@inject Microsoft.Extensions.Configuration.IConfiguration$1 ${2:Configuration}$0",
    "description": "@inject IConfiguration directive in Blazor Server app",
    "prefix": "yInjectIConfiguration"
  },
  "injectIJSRuntime": {
    "body": "@inject IJSRuntime$1 ${2|JSRuntime,Js|}$0",
    "description": "@inject IJSRuntime directive",
    "prefix": "yInjectIJSRuntime"
  },
  "injectIMapper": {
    "body": "@inject IMapper Mapper$0",
    "description": "@inject IMapper directive",
    "prefix": "yInjectIMapper"
  },
  "injectMyServiceDirective": {
    "body": "@inject ${1:MyService} ${2:$1}",
    "description": "@inject MyService MyService",
    "prefix": "yInjectService"
  },
  "injectNavigationManager": {
    "body": "@inject NavigationManager$1 ${2|NavigationManager,Navigation,Nav|}$0",
    "description": "@inject NavigationManager directive",
    "prefix": "yInjectNavigationManager"
  },
  "injectProtectedLocalStorage": {
    "body": "@inject ProtectedLocalStorage$1 ${2|LocalStorage,Storage|}$0",
    "description": "@inject ProtectedLocalStorage directive in Blazor Server app",
    "prefix": "yInjectProtectedLocalStorage"
  },
  "injectSignOutSessionStateManager": {
    "body": [
      "@inject SignOutSessionStateManager SignOutManager",
      "@* add @using Microsoft.AspNetCore.Components.WebAssembly.Authentication to _imports.razor file*@"
    ],
    "description": "@inject SignOutSessionStateManager directive",
    "prefix": "yInjectSignOutSessionStateManager"
  },
  "inputCheckBoxAndLabel": {
    "body": [
      "<div class=\"form-check\">",
      "\t<InputCheckbox id=\"id$2\" class=\"form-check-input\" @bind-Value=\"@${1:Model}.${2:PropertyName}\" />",
      "\t<label class=\"form-check-label\" for=\"id$2\">${3:$2}</label>",
      "\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputCheckBox component + label",
    "prefix": "yInputCheckBoxAndLabel"
  },
  "inputCheckbox": {
    "body": "<InputCheckbox @bind-Value=\"${1:Model}.${2:Property}\" />$0",
    "description": "Inserts an InputCheckbox component",
    "prefix": "yInputCheckbox"
  },
  "inputDate": {
    "body": "<InputDate @bind-Value=\"${1:Model}.${2:DateProperty}\" />$0",
    "description": "InputDate component",
    "prefix": "yInputDate"
  },
  "inputDateAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputDate id=\"id$2\" class=\"form-control\"  @bind-Value=\"@${1:Model}.${2:PropertyName}\" />",
      "\t\t<ValidationMessage For=\"@(() => $1.$2\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputDate component + label",
    "prefix": "yInputDateAndLabel"
  },
  "inputFile": {
    "body": [
      "div class=\"file\">",
      "\t<span>@Cell.Content</span>:",
      "",
      "\t\t<InputFile OnChange=\"@HandleFileChosenAsync\" />",
      "",
      "\t<div>@status</div>",
      "</div>"
    ],
    "description": "Inserts an InputFile component",
    "prefix": "yInputFileComponent"
  },
  "inputNumber": {
    "body": "<InputNumber @bind-Value=\"${1:Model}.${2:Property}\" />$0",
    "description": "Inserts an InputNumber component",
    "prefix": "yInputNumber"
  },
  "inputNumberAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputNumber id=\"id$2\" class=\"form-control\" @bind-Value=\"@${1:Model}.${2:PropertyName}\" />",
      "\t\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputNumber component + label",
    "prefix": "yInputNumberAndLabel"
  },
  "cascadingValue": {
    "body": [
      "<CascadingValue Value=\"@${1:PropertyName}\" Name=\"@${2:ValueName}\" IsFixed=\"false\" >",
      "\t$0",
      "</CascadingValue>"
    ],
    "description": "Inserts a CascadingValue attribute",
    "prefix": "yCascadingValue"
  },
  "inputRadio": {
    "body": "<InputRadio Value=\"${1:value}\" />$0",
    "description": "Inserts a InputRadio component",
    "prefix": "yInputRadio"
  },
  "inputRadioGroup": {
    "body": [
      "<InputRadioGroup Name=\"${1:NameInputRadioGroup}\" @bind-Value=\"${2:Type}.${3:Property}\">",
      "    <InputRadio Name=\"$1\" Value=\"${4:Value1}\" />$4<br>",
      "    <InputRadio Name=\"$1\" Value=\"${5:Value2}\" />$5<br>",
      "    <InputRadio Name=\"$1\" Value=\"${6:Value3}\" />$6<br>",
      "    <InputRadio Name=\"$1\" Value=\"${7:Value4}\" />$7<br>",
      "</InputRadioGroup>"
    ],
    "description": "Inserts a RadioGroup component",
    "prefix": "yInputRadioGroup"
  },
  "inputSelect": {
    "body": [
      "<InputSelect @bind-Value=\"${1:Model}.${2:Property}\" >$0",
      "\t<option value=\"\">Select...</option>",
      "\t<option value=\"${3:YourValue}\">${4:$3}</option>",
      "</InputSelect>$0"
    ],
    "description": "Inserts an InputSelect component",
    "prefix": "yInputSelect"
  },
  "inputSelectAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputSelect id=\"$id$2}\" class=\"form-select\" @bind-Value=\"@${1:Model}.${2:PropertyName}\" >$0",
      "\t\t\t<option disabled value=\"\">${4:Select...}</option>",
      "\t\t\t<option value=\"${5:YourValue}\">${6:$5}</option>",
      "\t\t</InputSelect>$0",
      "\t\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputSelect component + label",
    "prefix": "yInputSelectAndLabel"
  },
  "inputSelectForEach": {
    "body": [
      "<InputSelect @bind-Value=\"${1:Model}.${2:Property}\" >$0",
      "\t<option value=\"\">Select...</option>",
      "\t@foreach (var ${3:item} in ${4:Items})",
      "{",
      "\t\t<option value=\"${5:$3}.${6:Id}\">${7:$5}.${8:DisplayProperty}</option>",
      "\t}",
      "</InputSelect>$0"
    ],
    "description": "Inserts an InputSelect (foreach) component",
    "prefix": "yInputSelectForEach"
  },
  "inputSelectForEachAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputSelect id=\"$id$2\" class=\"form-select\" @bind-Value=\"${1:Model}.${2:PropertyName}\" >$0",
      "\t\t\t<option disabled value=\"\">${4:Select...}</option>",
      "\t\t\t@foreach (var ${5:item} in ${6:Items})",
      "\t\t{",
      "\t\t\t\t<option value=\"${7:$5}.${8:Id}\">${9:$5}.${10:DisplayProperty}</option>",
      "\t\t\t}",
      "\t\t</InputSelect>",
      "\t\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts InputSelect (foreach) component + label",
    "prefix": "yInputSelectForEachAndLabel"
  },
  "inputText": {
    "body": "<InputText @bind-Value=\"${1:Model}.${2:Property}\" />$0",
    "description": "Inserts an InputText component",
    "prefix": "yInputText"
  },
  "inputTextArea": {
    "body": "<InputTextArea @bind-Value=\"${1:Model}.${2:Property}\" />$0",
    "description": "Inserts an InputTextArea component",
    "prefix": "yInputTextArea"
  },
  "inputTextAreaAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputTextArea id=\"id$2\" class=\"form-control\" @bind-Value=\"@${1:Model}.${2:PropertyName}\" />",
      "\t\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputTextArea component + label",
    "prefix": "inputTextAreaAndLabel"
  },
  "inputTextAndLabel": {
    "body": [
      "<div class=\"mb-3\">",
      "\t<label for=\"id$2\">${3:$2}</label>",
      "\t<div>",
      "\t\t<InputText id=\"id$2\" class=\"form-control\" @bind-Value=\"@${1:Model}.${2:PropertyName}\" />",
      "\t\t<ValidationMessage For=\"@(() => $1.$2)\" />",
      "\t</div>",
      "</div>",
      "$0"
    ],
    "description": "Inserts an InputText component + label",
    "prefix": "yInputTextAndLabel"
  },
  "layoutDirective": {
    "body": "@layout ${1:LayoutName}",
    "description": "@layout MyLayout",
    "prefix": "yLayout"
  },
  "navLink": {
    "body": "<NavLink href=\"${1}\">${3:Home}</NavLink>",
    "description": "NavLink",
    "prefix": "yNavLink"
  },
  "navLinkWithMatchAttribute": {
    "body": "<NavLink href=\"${1}\" Match=\"${2|NavLinkMatch.All,NavLinkMatch.Prefix|}\">${3:Home}</NavLink>",
    "description": "NavLink with MatchAttribute",
    "prefix": "yNavLinkMatch"
  },
  "onValidSubmit": {
    "body": "OnValidSubmit=\"${1:MethodName}\"$0",
    "description": "OnValidSubmit",
    "prefix": "yOnValidSubmit"
  },
  "pageDirective": {
    "body": "@page \"/${TM_FILENAME_BASE/(.*)/${1:/downcase}/}\"",
    "description": "@page directive",
    "prefix": "yPage"
  },
  "pageDirectiveWithParameter": {
    "body": [
      "@page \"/${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}/{${2:ParameterName}:${3|int,bool,datetime,decimal,double,float,guid,long,string|}}\""
    ],
    "description": "@page directive with Parameter",
    "prefix": "yPageParam"
  },
  "refAttribute": {
    "body": "@ref=\"${1:Property}\"",
    "description": "@ref=\"MyProperty\"",
    "prefix": "yRef"
  },
  "templatedComponent": {
    "body": [
      "@typeparam TItem",
      "",
      "<table>",
      "\t<thead>",
      "\t\t<tr>@TableHeader</tr>",
      "\t</thead>",
      "\t<tbody>",
      "\t\t@foreach (var item in Items)",
      "\t\t{",
      "\t\t\t<tr>@RowTemplate(item)</tr>",
      "\t\t}",
      "\t</tbody>",
      "\t<tfoot>",
      "\t\t<tr>@TableFooter</tr>",
      "\t</tfoot>",
      "</table>",
      "",
      "@code {",
      "\t[Parameter] public RenderFragment TableHeader { get; set; }",
      "",
      "\t[Parameter] public RenderFragment<TItem> RowTemplate { get; set; }",
      "",
      "\t[Parameter] public RenderFragment TableFooter { get; set; }",
      "",
      "\t[Parameter] public IReadOnlyList<TItem> Items { get; set; }",
      "}"
    ],
    "description": "Templated component",
    "prefix": "yTemplatedComponent"
  },
  "typeParamDirective": {
    "body": "@typeparam ${1:T}",
    "description": "@typeParam",
    "prefix": "yTypeParam"
  },
  "usingDirective": {
    "body": "@using ${1:MyNameSpace}",
    "description": "@using MyNameSpace",
    "prefix": "yUsing"
  },
  "validationMessageFor": {
    "body": "<ValidationMessage For=\"@(() => ${1:PropertyName})\" />$0",
    "description": "ValidationMessageFor",
    "prefix": "yValidationMessageFor"
  },
  "validationSummary ": {
    "body": "<ValidationSummary  />",
    "description": "ValidationSummary component",
    "prefix": "yValidationSummary "
  },
  "virtualizeComponent": {
    "body": [
      "@* [Parameter] public ICollection<object> Data { get; set; } *@",
      "<Virtualize Items=\"Data\" Context=\"entry\">",
      "\t$0",
      "</Virtualize>"
    ],
    "description": "Inserts the Virtualize component",
    "prefix": "yVirtualizeComponent"
  },
  "voidDispose": {
    "body": [
      "\tpublic void Dispose()",
      "\t{",
      "\t\t$0",
      "\t}"
    ],
    "description": "Dispose method stub",
    "prefix": "yVoidDispose"
  }
}